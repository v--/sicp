#lang sicp

; Exercise 1.9
;
; Each of the following two procedures defines a method for adding two positive integers in terms
; of the procedures inc, which increments its argument by 1, and dec, which decrements its argument by 1.
;
; (define (+ a b)
;   (if (= a 0)
;       b
;       (inc (+ (dec a) b))))
;
; (define (+ a b)
;   (if (= a 0)
;       b
;       (+ (dec a) (inc b))))
;
; Using the substitution model, illustrate the process generated by each procedure
; in evaluating (+ 4 5). Are these processes iterative or recursive?

; Solution

(define (plus-rec a b)
  (if (= a 0)
      b
      (inc (plus-rec (dec a) b))))

(define (plus-iter a b)
  (if (= a 0)
      b
      (plus-iter (dec a) (inc b))))

(module+ test
  (require rackunit)

  ; Verify that each step of the expansion produces the same result
  (define-simple-check (check-nine? x) (= x 9))

  ; The first process is recursive
  (check-nine? (plus-rec 4 5))
  (check-nine? (inc (plus-rec (dec 4) 5)))
  (check-nine? (inc (inc (plus-rec (dec 3) 5))))
  (check-nine? (inc (inc (inc (plus-rec (dec 2) 5)))))
  (check-nine? (inc (inc (inc (inc (plus-rec (dec 1) 5))))))
  (check-nine? (inc (inc (inc (inc (plus-rec 0 5))))))
  (check-nine? (inc (inc (inc (inc 5)))))
  (check-nine? (inc (inc (inc 6))))
  (check-nine? (inc (inc 7)))
  (check-nine? (inc 8))
  (check-nine? 9)

  ; The second process is iterative
  (check-nine? (plus-iter 4 5))
  (check-nine? (plus-iter (dec 4) (inc 5)))
  (check-nine? (plus-iter (dec 3) (inc 6)))
  (check-nine? (plus-iter (dec 2) (inc 7)))
  (check-nine? (plus-iter (dec 1) (inc 8)))
  (check-nine? (plus-iter 0 9))
  (check-nine? 9))
